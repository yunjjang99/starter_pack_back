services:
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/dockerfile.backend
    container_name: backend
    ports:
      - "7778:7778"
    environment:
      - DB_HOST=mysql # mysql 컨테이너 이름
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - IS_DEV=${IS_DEV}
      - JWT_SECRET=${JWT_SECRET}
      - BACKEND_PORT=${BACKEND_PORT}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mynetwork
    restart: always

  mysql:
    build:
      context: ./ 
      dockerfile: ./dockerfile.mysql
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "6654:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h mysql -u root -p${MYSQL_ROOT_PASSWORD} || exit 1" ] # localhost 대신 mysql 사용
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: agreez_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - mynetwork
    volumes:
      - es_data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: agreez_logstash
    ports:
      - "5044:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./pipelines.yml:/usr/share/logstash/config/pipelines.yml
    networks:
      - mynetwork
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: agreez_kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    networks:
      - mynetwork
    depends_on:
      - elasticsearch

volumes:
  db_data:
  es_data:

networks:
  mynetwork:
    driver: bridge
